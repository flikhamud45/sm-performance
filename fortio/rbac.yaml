apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: fortio-workload
  namespace: workload
rules:
  - apiGroups: [ "*" ]
    resources: [ "*" ]
    verbs: [ "*" ]
  - apiGroups: [ "security.openshift.io" ]
    resources: [ "securitycontextconstraints"]
    resourceNames: [ "nonroot" ]
    verbs: [ "use" ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: fortio-workload
  namespace: workload
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: fortio-workload
subjects:
  - kind: ServiceAccount
    name: fortio-workload
    namespace: workload
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: fortio-workload
  namespace: workload
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: workload
  namespace: workload

#apiVersion: security.openshift.io/v1
#kind: SecurityContextConstraints
#metadata:
#  annotations:
#    kubernetes.io/description: my-scc is a close replica of anyuid scc. pipelines-scc has fsGroup - RunAsAny.
#  name: my-scc
#allowHostDirVolumePlugin: true
#allowHostIPC: true
#allowHostNetwork: true
#allowHostPID: true
#allowHostPorts: true
#allowPrivilegeEscalation: true
#allowPrivilegedContainer: true
#allowedCapabilities: null
#defaultAddCapabilities: null
#fsGroup:
#  type: RunAsAny
#groups:
#  - system:cluster-admins
#priority: 10
#readOnlyRootFilesystem: false
#requiredDropCapabilities:
#  - MKNOD
#runAsUser:
#  type: RunAsAny
#seLinuxContext:
#  type: MustRunAs
#supplementalGroups:
#  type: RunAsAny
#volumes:
#  - configMap
#  - downwardAPI
#  - emptyDir
#  - persistentVolumeClaim
#  - projected
#  - secret

#oc adm policy add-scc-to-user nonroot -z fortio-workload